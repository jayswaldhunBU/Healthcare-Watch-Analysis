{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rhGsF9IrPUvw"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import math\n","import matplotlib.pyplot as plt  # To visualize\n","from sklearn.linear_model import LinearRegression\n","from sklearn import datasets, linear_model"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')\n","## Update the experiments directory\n","DATA_DIRECTORY = '/content/gdrive/Shareddrives/CS 506 Project (Work from Home)/Data/Non-Hypothesis Data/3MonthWorkStation.csv'\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4WqacvapPub8","executionInfo":{"status":"ok","timestamp":1667226065260,"user_tz":240,"elapsed":19077,"user":{"displayName":"Rahul Razdan","userId":"13758383662585446533"}},"outputId":"b182f839-32f1-48ba-fa0e-7acfa35a7faf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["DATA = pd.read_csv(DATA_DIRECTORY)"],"metadata":{"id":"0t-CLzNDWk4T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["DATA[[\"date\", \"exact_time\"]] = DATA[\"local_time\"].str.split(\" \", expand=True)\n","DATA = DATA.drop(columns = ['local_time'])"],"metadata":{"id":"Iw_9BsoQWxmL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["DATA[[\"Year\", \"Month\", \"Day\"]] = DATA[\"date\"].str.split(\"-\", expand=True)\n","DATA = DATA.drop(columns = [\"date\"])"],"metadata":{"id":"msnSkOktYV8s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = DATA.to_numpy()\n","new_data = data[:, 3:30]\n","heart_rate_new_data = data[:, 3:31]"],"metadata":{"id":"s9SVsz4xcBwi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["booleans = []\n","heart_booleans = []\n","for new in new_data:\n","  if new[-1] == 0:\n","    booleans.append(False)\n","  else:\n","    booleans.append(True)\n","for heart in heart_rate_new_data:\n","  if heart[-1] == 0:\n","    heart_booleans.append(False)\n","  else:\n","    heart_booleans.append(True)\n","\n","new_data = new_data[booleans]\n","heart_rate_new_data = heart_rate_new_data[heart_booleans]"],"metadata":{"id":"K5b2T1NIeoLR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = new_data[:, 0:-1]\n","y = new_data[:, -1]\n","print(heart_rate_new_data.shape)"],"metadata":{"id":"mEPL1KANf6eF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667226361287,"user_tz":240,"elapsed":703,"user":{"displayName":"Rahul Razdan","userId":"13758383662585446533"}},"outputId":"17e54ba6-70e7-43e6-cd52-64a732284561"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(17, 28)\n"]}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeRegressor as reg\n","\n","regressor = reg(max_depth = 3)\n","regressor.fit(X, y)\n","pred = regressor.predict(X)"],"metadata":{"id":"gQM-c7AcgMkz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dist = np.linalg.norm(y - pred)\n","print(dist)"],"metadata":{"id":"Ur26rsE-hOUq","executionInfo":{"status":"ok","timestamp":1667062206156,"user_tz":240,"elapsed":6,"user":{"displayName":"Rahul Razdan","userId":"13758383662585446533"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"fd5c97dc-4acf-48c5-de09-769763f4d35b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["126.26151728029653\n"]}]},{"cell_type":"code","source":["averageDist = abs(y - pred)\n","print(sum(averageDist)/len(averageDist))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZNGuOxWphQ9m","executionInfo":{"status":"ok","timestamp":1667062208111,"user_tz":240,"elapsed":149,"user":{"displayName":"Rahul Razdan","userId":"13758383662585446533"}},"outputId":"ad951cab-1115-46c5-ff25-c3be495388f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["12.963617918719208\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"nri906FMiGAm"},"execution_count":null,"outputs":[]}]}